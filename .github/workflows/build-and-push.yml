name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon

      - name: Define Docker Tag
        id: generate_tag
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          DATE=$(date +'%Y%m%d')
          echo "TAG=dev-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ghcr.io/projex-io/taskora-back:${{ env.TAG }} .

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Push Docker image
        run: docker push ghcr.io/projex-io/taskora-back:${{ env.TAG }}

  release_if_applicable:
    runs-on: ubuntu-latest
    needs: build
    if: |
      github.event.head_commit.message == 'Merge pull request' ||
      contains(github.event.head_commit.message, 'Merge pull request')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest merged PR
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              sort: 'updated',
              direction: 'desc',
              per_page: 5
            });

            const merged = prs.data.find(pr =>
              pr.merged_at &&
              pr.merge_commit_sha === context.sha &&
              pr.head.ref.startsWith('rel/') &&
              pr.labels.find(l => l.name === 'release')
            );

            if (!merged) {
              core.setOutput('do_release', 'false');
              return;
            }

            const fullRef = merged.head.ref; // rel/v0.1.2
            const tag = fullRef.replace(/^rel\//, ''); // v0.1.2
            core.setOutput('do_release', 'true');
            core.setOutput('tag_name', tag);

      - name: Create Git Tag
        if: steps.pr.outputs.do_release == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "${{ steps.pr.outputs.tag_name }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} "${{ steps.pr.outputs.tag_name }}"

      - name: Create GitHub Release
        if: steps.pr.outputs.do_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.pr.outputs.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Build & Push Docker image with release tag
        if: steps.pr.outputs.do_release == 'true'
        run: |
          docker build -t ghcr.io/projex-io/taskora-back:${{ steps.pr.outputs.tag_name }} .
          echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/projex-io/taskora-back:${{ steps.pr.outputs.tag_name }}
  
