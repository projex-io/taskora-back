name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon

      - name: Define Docker Tag
        id: generate_tag
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          DATE=$(date +'%Y%m%d')
          echo "TAG=dev-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ghcr.io/projex-io/taskora-back:${{ env.TAG }} .

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ghcr.io/projex-io/taskora-back:${{ env.TAG }}

  release_if_applicable:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trouver la PR liée au commit squash
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commitSha = context.sha;
            const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: commitSha,
              mediaType: {
                previews: ['groot'] // requis pour cette API
              }
            });
            
            if (prs.length === 0) {
              console.log("Aucune PR liée au commit");
              core.setOutput('should_release', 'false');
              return;
            }
            
            const pr = prs[0];
            const hasReleaseLabel = pr.labels.some(label => label.name === 'release');
            
            core.setOutput('should_release', hasReleaseLabel ? 'true' : 'false');
            core.setOutput('pr_number', pr.number);

      - name: Exécuter le release
        if: steps.pr.outputs.should_release == 'true'
        run: |
          echo "✅ PR #${{ steps.pr.outputs.pr_number }} avait le label 'release'. Lancement du release..."
          # ta logique de release ici (npm publish, tag, etc.)

      - name: Ignorer le release si pas de label
        if: steps.pr.outputs.should_release != 'true'
        run: echo "❌ La PR n'avait pas le label 'release'. Release ignoré."
  
