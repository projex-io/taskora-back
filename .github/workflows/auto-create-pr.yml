name: Auto Create Pull Request on Push

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        id: get_branch
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Check if PR already exists
        id: pr_check
        run: |
          BRANCH_NAME="${{ steps.get_branch.outputs.branch }}"
          PRS=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:$BRANCH_NAME)
          PR_EXISTS=$(echo "$PRS" | jq 'length > 0')
          echo "pr_exists=$PR_EXISTS" >> $GITHUB_OUTPUT

      - name: Define PR title and body
        id: pr_vars
        run: |
          BRANCH_NAME="${{ steps.get_branch.outputs.branch }}"

          PREFIX=$(echo "$BRANCH_NAME" | cut -d'/' -f1)
          REST=$(echo "$BRANCH_NAME" | cut -d'/' -f2-)

          case "$PREFIX" in
            feat)
              TITLE="🚀 $(echo "$REST" | sed -E 's/-/ /g' | sed -E 's/^(.)/\U\1/')"
              LABEL="feature"
              ;;
            fix)
              TITLE="🐛 $(echo "$REST" | sed -E 's/-/ /g' | sed -E 's/^(.)/\U\1/')"
              LABEL="bug"
              ;;
            build)
              TITLE="🛠️ $(echo "$REST" | sed -E 's/-/ /g' | sed -E 's/^(.)/\U\1/')"
              LABEL="build"
              ;;
            chore)
              TITLE="🧹 $(echo "$REST" | sed -E 's/-/ /g' | sed -E 's/^(.)/\U\1/')"
              LABEL="chore"
              ;;
            docs)
              TITLE="📚 $(echo "$REST" | sed -E 's/-/ /g' | sed -E 's/^(.)/\U\1/')"
              LABEL="documentation"
              ;;
            test)
              TITLE="🧪 $(echo "$REST" | sed -E 's/-/ /g' | sed -E 's/^(.)/\U\1/')"
              LABEL="test"
              ;;
            *)
              TITLE="✨ $(echo "$REST" | sed -E 's/-/ /g' | sed -E 's/^(.)/\U\1/')"
              LABEL="enhancement"
              ;;
          esac

          BODY="PR automatique créée depuis la branche \`$BRANCH_NAME\`."
          echo "pr_title=$TITLE" >> $GITHUB_OUTPUT
          echo "pr_body=$BODY" >> $GITHUB_OUTPUT
          echo "label=$LABEL" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.pr_check.outputs.pr_exists == 'false'
        run: |
          BRANCH_NAME="${{ steps.get_branch.outputs.branch }}"
          TITLE="${{ steps.pr_vars.outputs.pr_title }}"
          BODY="${{ steps.pr_vars.outputs.pr_body }}"

          PR_RESPONSE=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg title "$TITLE" \
              --arg head "$BRANCH_NAME" \
              --arg base "main" \
              --arg body "$BODY" \
              '{title: $title, head: $head, base: $base, body: $body}')" \
            "https://api.github.com/repos/${{ github.repository }}/pulls")

          echo "$PR_RESPONSE"

          PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r .number)
          if [ "$PR_NUMBER" == "null" ]; then
            echo "❌ Échec de la création de la PR"
            exit 1
          fi

          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Add Label to PR
        if: steps.pr_check.outputs.pr_exists == 'false'
        run: |
          LABEL="${{ steps.pr_vars.outputs.label }}"
          PR_NUMBER="${{ steps.create_pr.outputs.pr_number }}"

          curl -s -X POST \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"labels\": [\"$LABEL\"]}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels"

      - name: Assign PR to author
        if: steps.pr_check.outputs.pr_exists == 'false'
        run: |
          AUTHOR="${{ github.actor }}"
          PR_NUMBER="${{ steps.create_pr.outputs.pr_number }}"

          curl -s -X POST \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"assignees\": [\"$AUTHOR\"]}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/assignees"
