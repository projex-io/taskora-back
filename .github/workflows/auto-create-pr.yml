name: Auto Create PR

on:
  push:
    branches-ignore:
      - main

jobs:
  create-pr:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Extract branch info and PR metadata
        id: vars
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          
          case "$BRANCH_NAME" in
            feat/*)     PREFIX="🚀"; RAW_NAME="${BRANCH_NAME#feat/}";     LABEL="feature" ;;
            fix/*)      PREFIX="🐛"; RAW_NAME="${BRANCH_NAME#fix/}";      LABEL="bug" ;;
            docs/*)     PREFIX="📚"; RAW_NAME="${BRANCH_NAME#docs/}";     LABEL="documentation" ;;
            refactor/*) PREFIX="♻️"; RAW_NAME="${BRANCH_NAME#refactor/}"; LABEL="refactor" ;;
            perf/*)     PREFIX="⚡"; RAW_NAME="${BRANCH_NAME#perf/}";      LABEL="" ;;
            build/*)    PREFIX="🛠️"; RAW_NAME="${BRANCH_NAME#build/}";    LABEL="" ;;
            *)          PREFIX=""; RAW_NAME="$BRANCH_NAME";               LABEL="" ;;
          esac
          
          # Capitalize first letter of each word and replace "-" by space
          TITLE_RAW=$(echo "$RAW_NAME" | sed -e 's/\b\(.\)/\u\1/g' -e 's/-/ /g')
          
          # Compose title with or without prefix (no extra space)
          if [ -n "$PREFIX" ]; then
            TITLE="$PREFIX $TITLE_RAW"
          else
            TITLE="$TITLE_RAW"
          fi
          
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "prefix=$PREFIX" >> $GITHUB_OUTPUT
          echo "raw_name=$RAW_NAME" >> $GITHUB_OUTPUT
          echo "label=$LABEL" >> $GITHUB_OUTPUT
          echo "title=$TITLE" >> $GITHUB_OUTPUT

      - name: Check if PR exists for branch
        id: pr_check
        run: |
          EXISTING_PR=$(gh pr list --head ${{ steps.vars.outputs.branch }} --json number --jq '.[0].number' || echo "")
          echo "pr_number=$EXISTING_PR" >> $GITHUB_OUTPUT

      - name: Create PR if none exists
        if: steps.check_pr.outputs.exists == 'false'
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          gh pr create \
            --title "${{ steps.vars.outputs.title }}" \
            --body "Auto-generated PR" \
            --head "${{ steps.vars.outputs.branch }}" \
            --base main \
            --label "${{ steps.vars.outputs.label }}" \
            --draft
